---
# Copyright (C) 2020 Stefan Hornburg (Racke) <racke@linuxia.de>
# SPDX-License-Identifier: Artistic-2.0

- name: Include variables depending on OS details
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_distribution }}.yml"
        - "{{ ansible_os_family }}.yml"
        - "defaults.yml"
      paths: osvars
  tags: sympa

- name: Check for valid installation method
  assert:
    that:
      sympa_installation_method in ['package', 'repository', 'source', 'sync']
  tags: sympa

- name: Check for mandatory parameter
  assert:
    that:
       sympa_sync_directory is defined
  when: sympa_installation_method == 'sync'
  tags:
    - sympa

- name: Install prerequisites for compiling Sympa
  import_tasks: compile-prereqs.yml
  when: sympa_installation_method != 'package'
  tags:
    - sympa

- name: Install database driver for Perl (PostgreSQL)
  package:
    name: "{{ sympa_database_driver_postgresql }}"
  when: sympa_installation_method != 'package'
  tags:
    - sympa
    
- name: Run tasks specific for installation method
  import_tasks: "{{ sympa_installation_method }}.yml"
  tags:
    - sympa

- name: Configure, make and install Sympa
  import_tasks: config-make-install.yml
  when: sympa_installation_method != 'package'
  notify: restart sympa

- name: Determine whether sendmail binary exists
  command: which sendmail
  failed_when: sympa_sendmail_results.rc not in [0,1]
  register: sympa_sendmail_results

- name: Install MTA with sendmail binary
  package:
    name: postfix
  when: sympa_sendmail_results.rc == 1

- name: Enable syslog
  import_tasks: syslog.yml
  when: sympa_installation_method != 'package'
    
- name: Create directory
  file:
    state: directory
    path: /etc/mail
    owner: "{{ sympa_unix_user }}"
    group: "{{ sympa_unix_group }}"
    mode: 0755

- name: Create file with aliases
  file:
    state: touch
    path: /etc/mail/sympa_aliases
    owner: "{{ sympa_unix_user }}"
    group: "{{ sympa_unix_group }}"
 
- name: Create configuration file sympa.conf2
  template:
    src: sympa.conf.j2
    dest: /etc/sympa/sympa.conf
    owner: "{{ sympa_unix_user }}"
    group: "{{ sympa_unix_group }}"
    mode: 0640
  tags:
    - sympa

- name: Create directory for systemd dropin file
  file:
    state: directory
    path: "/etc/systemd/system/{{ item }}.service.d"
    owner: root
    group: root
    mode: 0755
  with_items: "{{ sympa_services }}"
  when: ansible_service_mgr == "systemd"

- name: Add drop in file for systemd
  copy:
    content: |
      [Service] 
      Environment=PERL5LIB=/home/{{ sympa_unix_user }}/perl5/lib/perl5
    dest: "/etc/systemd/system/{{ item }}.service.d/10-locallib.conf"
    owner: root
    group: root
    mode: 0640
  with_items: "{{ sympa_services }}"
  register: sympa_service_dropin
  when: ansible_service_mgr == "systemd"
  
- name: Reload systemd if necessary
  systemd:
    daemon_reload: yes
  with_items: "{{ sympa_services }}"
  when:
    - ansible_service_mgr == "systemd"
    - sympa_service_dropin.changed

- name: Ensure that Sympa is enabled and started
  service:
    name: sympa
    enabled: yes
    state: started
  with_items: sympa
  tags:
    - sympa

- name: Manage lists
  import_tasks: manage-lists.yml
  when: sympa_lists | count > 1

- name: WWSympa
  import_tasks: wwsympa.yml
  when: sympa_web_fcgi_enabled
    
